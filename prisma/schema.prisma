generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  Int          @id @default(autoincrement())
  name                String
  password            String
  email               String       @unique
  role                Role
  supervisorId        Int?
  createdAt           DateTime     @default(now())
  updatedAt           DateTime     @updatedAt
  evaluationsReceived Evaluation[] @relation("StudentEvaluations")
  evaluationsGiven    Evaluation[] @relation("SupervisorEvaluations")
  teams               Team[]       @relation("UserTeams")

  @@map("user")
}

model Team {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  members   User[]   @relation("UserTeams")
}

model Evaluation {
  id           Int      @id @default(autoincrement())
  studentId    Int
  supervisorId Int?
  year         Int
  semester     Semester
  type         Role
  criteria     Json
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  team         String?
  student      User     @relation("StudentEvaluations", fields: [studentId], references: [id])
  supervisor   User?    @relation("SupervisorEvaluations", fields: [supervisorId], references: [id])
}

model Criteria {
  id              Int      @id @default(autoincrement())
  name            String
  title           String
  subCriteria     SubCriteria[]
  criteriaLevels  CriteriaLevel[]
}

model SubCriteria {
  id              Int       @id @default(autoincrement())
  name            String
  criterion       Criteria  @relation(fields: [criterionId], references: [id])
  criterionId     Int
}

model Level {
  id              Int      @id @default(autoincrement())
  name            String   @unique
  title           String
  criteriaLevels  CriteriaLevel[]
}

model CriteriaLevel {
  id            Int       @id @default(autoincrement())
  criterion     Criteria  @relation(fields: [criterionId], references: [id])
  criterionId   Int
  level         Level     @relation(fields: [levelId], references: [id])
  levelId       Int
  description   String

  @@unique([criterionId, levelId])
}

model user_sessions {
  sid    String   @id(map: "session_pkey") @db.VarChar
  sess   Json     @db.Json
  expire DateTime @db.Timestamp(6)

  @@index([expire], map: "IDX_session_expire")
}

enum Semester {
  SPRING
  SUMMER
  FALL
}

enum Role {
  SUPERVISOR
  STUDENT
}
